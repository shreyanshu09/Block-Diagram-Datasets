<H> Start <R> connected_with <T> Read_N <H> Read_N <R> connected_with <T> M=1_F=1 <H> M=1_F=1 <R> connected_with <T> F=F*M <H> F=F*M <R> connected_with <T> M=N <H> M=N <R> NO <T> M=M+1 <H> M=M+1 <R> connected_with <T> F=F*M <H> M=N <R> YES <T> Print_F <H> Print_F <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_X <H> Input_X <R> connected_with <T> n=1_R=1 <H> n=1_R=1 <R> connected_with <T> R=R*n <H> R=R*n <R> connected_with <T> n=X <H> n=X <R> Yes <T> Disp_R <H> n=X <R> No <T> n=n+1 <H> n=n+1 <R> connected_with <T> R=R*n <H> Disp_R <R> connected_with <T> Stop 
<H> terminator <R> connected_with <T> Input_X <H> Input_X <R> connected_with <T> X=X*X <H> X=X*X <R> connected_with <T> Output_X <H> Output_X <R> connected_with <T> terminator
<H> terminator <R> connected_with <T> Read_n <H> Read_n <R> connected_with <T> n=n*n <H> n=n*n <R> connected_with <T> Print_n <H> Print_n <R> connected_with <T> terminator
<H> Start <R> connected_with <T> Input_A,B <H> Input_A,B <R> connected_with <T> A>=B <H> A>=B <R> connected_with <T> Output_B <H> A>=B <R> Yes <T> Output_A
<H> Begin <R> connected_with <T> Input_X,Y <H> Input_X,Y <R> connected_with <T> X>=Y <H> X>=Y <R> connected_with <T> display_Y <H> X>=Y <R> connected_with <T> display_X
<H> Start <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> sum=0_i=0 <H> sum=0_i=0 <R> connected_with <T> sum=sum+i <H> sum=sum+i <R> connected_with <T> i==n? <H> i==n? <R> No <T> i=i+1 <H> i=i+1 <R> connected_with <T> sum=sum+i <H> i==n? <R> Yes <T> Output_n <H> Output_n <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> k=1_sum=0 <H> k=1_sum=0 <R> connected_with <T> sum=sum+k <H> sum=sum+k <R> connected_with <T> k==n? <H> k==n? <R> 0 <T> k=k+1 <H> k=k+1 <R> connected_with <T> sum=sum+k <H> k==n? <R> 1 <T> Disp_sum <H> Disp_sum <R> connected_with <T> Finish 
<H> Begin <R> connected_with <T> Input_a,b <H> Input_a,b <R> connected_with <T> r=a%b <H> r=a%b <R> connected_with <T> r=0? <H> r=0? <R> Yes <T> Output_b <H> r=0? <R> No <T> a=b_b=c <H> a=b_b=c <R> connected_with <T> r=a%b <H> output_b <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_n,m <H> Input_n,m <R> connected_with <T> r=n%m <H> r=n%m <R> connected_with <T> r=0? <H> r=0? <R> True <T> Output_m <H> r=0? <R> false <T> n=m_m=r <H> r=n%m <R> connected_with <T> n=m_m=r <H> output_m <R> connected_with <T> End
<H> terminator <R> connected_with <T> A>B <H> A>B <R> Yes <T> T=B <H> T=B <R> connected_with <T> B=A_A=T <H> A>B <R> No <T> terminator <H> B=A_A=T <R> connected_with <T> terminator
<H> terminator <R> connected_with <T> X>Y <H> X>Y <R> then <T> T=Y <H> T=Y <R> connected_with <T> Y=X_X=T <H> X>Y <R> else <T> terminator <H> Y=X_X=T <R> connected_with <T> terminator 
<H> Begin <R> connected_with <T> Input_P <H> Input_P <R> connected_with <T> P>0 <H> P>0 <R> else <T> Input_P <H> P>0 <R> Then <T> Output_P <H> Output_P <R> connected_with <T> end
<H> Start <R> connected_with <T> Input_V <H> Input_V <R> connected_with <T> V>0 <H> V>0 <R> True <T> Output_V <H> Output_V <R> connected_with <T> End
<H> Begin <R> connected_with <T> Enter_x <H> Enter_x <R> connected_with <T> calculate_h(x) <H> calculate_h(x) <R> connected_with <T> calculate_g(x) <H> calculate_g(x) <R> connected_with <T> Display_h(x)g(x) <H> Display_h(x)g(x) <R> connected_with <T> End
<H> Start <R> connected_with <T> Input_V <H> Input_V <R> connected_with <T> Calculate_f(v) <H> Calculate_f(v) <R> connected_with <T> Calculate_g(V) <H> Calculate_g(V) <R> connected_with <T> Output_f(V)+g(V) <H> Output_f(V)+g(V) <R> connected_with <T> Stop
<H> terminator <R> connected_with <T> Read_n <H> Read_n <R> connected_with <T> T[1]=T[2]=1_i=3 <H> T[1]=T[i]=1_i=3 <R> connected_with <T> i<n <H> i<n <R> 0 <T> Print_T[n] <H> i<n <R> 1 <T> T[i]=T[i-1]+T[i-2] <H> T[i]=T[i-1]+T[i-2] <R> connected_with <T> i++ <H> i++ <R> connected_with <T> i<n <H> Print_T[n] <R> connected_with <T> terminator
<H> terminator <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> T[1]=T[2]=1_i=3 <H> T[1]=T[i]=1_i=3 <R> connected_with <T> i<n <H> i<n <R> N <T> Output_T[n] <H> i<n <R> Y <T> T[i]=T[i-1]+T[i-2] <H> T[i]=T[i-1]+T[i-2] <R> connected_with <T> i++ <H> i++ <R> connected_with <T> i<n <H> output_T[n] <R> connected_with <T> terminator
<H> Begin <R> connected_with <T> read_a,b,c <H> read_a,b,c <R> connected_with <T> A=b2-4ac <H> A=b2-4ac <R> connected_with <T> A<0 <H> A<0 <R> then <T> nothing <H> nothing <R> connected_with <T> End <H> A<0 <R> else <T> A=0 <H> A=0 <R> then <T> Output_-b/2a <H> Output_-b/2a <R> connected_with <T> End <H> A=0 <R> else <T> Output_-b+c/2a <H> Output_-b+c/2a <R> connected_with <T> output_b-a/2a <H> output_b-a/2a <R> connected_with <T> End
<H> Start <R> connected_with <T> input_a,b,c <H> input_a,b,c <R> connected_with <T> A=b2-4ac <H> A=b2-4ac <R> connected_with <T> A<0 <H> A<0 <R> Y <T> No_solution <H> No_solution <R> connected_with <T> End <H> A<0 <R> N <T> A=0 <H> A=0 <R> Y <T> Output_-b/2a <H> Output_-b/2a <R> connected_with <T> End <H> A=0 <R> N <T> Output_-b+c/2a <H> Output_-b+c/2a <R> connected_with <T> output_b-a/2a <H> output_b-a/2a <R> connected_with <T> End 
<H> Start <R> connected_with <T> Do_I_want_to_do_this? <H> Do_I_want_to_do_this? <R> No <T> Don't_do_it. <H> Do_I_want_to_do_this? <R> Yes <T> Will_it_likely_end_in_disaster? <H> Will_it_likely_end_in_disaster? <R> No <T> Do_it! <H> Will_it_likely_end_in_disaster? <R> Yes <T> will_it_make_a_good_story_anyway? <H> will_it_make_a_good_story_anyway? <R> No <T> Don't_do_it. <H> will_it_make_a_good_story_anyway? <R> Yes <T> Do_it!
<H> Start <R> connected_with <T> Do_I_want_to_do_this? <H> Do_I_want_to_do_this? <R> Yes <T> Do_it! <H> Do_I_want_to_do_this? <R> No <T> Will_it_likely_end_in_disaster? <H> Will_it_likely_end_in_disaster? <R> No <T> Do_it! <H> Will_it_likely_end_in_disaster? <R> Yes <T> will_it_make_a_good_story_anyway? <H> will_it_make_a_good_story_anyway? <R> No <T> Don't_do_it. <H> will_it_make_a_good_story_anyway? <R> Yes <T> Do_it!
<H> Start <R> connected_with <T> Read_X <H> Read_X <R> connected_with <T> X>0 <H> X>0 <R> False <T> Read_Y <H> X>0 <R> True <T> X=2*X <H> X=2*X <R> connected_with <T> Halt <H> Read_Y <R> connected_with <T> X=X*Y <H> X=X*Y <R> connected_with <T> Halt
<H> Start <R> connected_with <T> Input_a <H> Input_a <R> connected_with <T> Let_X=a/3 <H> Let_X=a/3 <R> connected_with <T> ls|a-x3|<S? <H> ls|a-x3|<S? <R> Yes <T> Output:The_cube_root_of_a_is_X. <H> Output:The_cube_root_of_a_is_X. <R> connected_with <T> Stop <H> ls|a-x3|<S? <R> No <T> Let_X=X-(X3-a)/3X2 <H> Let_X=X-(X3-a)/3X2 <R> connected_with <T> ls|a-x3|<S?  
<H> Work <R> connected_with <T> Tired? <H> Tired? <R> No <T> Work <H> Tired? <R> Yes <T> Go_to_coffee_maker <H> Go_to_coffee_maker <R> connected_with <T> Fresh_coffee? <H> Fresh_coffee? <R> Yes <T> Drink_coffee <H> Drink_coffee <R> connected_with <T> Tired? <H> Fresh_coffee? <R> No <T> Make_coffee <H> Make_coffee <R> connected_with <T> Drink_coffee
<H> Start <R> connected_with <T> Request_key_from_mem_cached <H> Request_key_from_mem_cached <R> connected_with <T> Does_key_exist? <H> Does_key_exist? <R> No <T> Load_data_from_database <H> Load_data_from_database <R> connected_with <T> Update_memcached <H> Does_key_exist? <R> Yes <T> Use_data <H> Update_memcached <R> connected_with <T> Use_data
<H> terminator <R> connected_with <T> SET_RESULT_TO_ZERO <H> SET_RESULT_TO_ZERO <R> connected_with <T> LSB(MPR)=1? <H> LSB(MPR)=1? <R> No <T> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <H> LSB(MPR)=1? <R> Yes <T> RESULT=RESULT+MPD <H> RESULT=RESULT+MPD <R> connected_with <T> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <H> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <R> connected_with <T> NEXT_LSB_(MPR) <H> NEXT_LSB_(MPR) <R> connected_with <T> DONE_FOR_8_BITS? <H> DONE_FOR_8_BITS? <R> No <T> LSB(MPR)=1? <H> DONE_FOR_8_BITS? <R> Yes <T> terminator
<H> S <R> connected_with <T> Initialisation <H> Initialisation <R> connected_with <T> Population_of_solutions <H> Population_of_solutions <R> connected_with <T> Terminate? <H> Terminate? <R> connected_with <T> Output_Best_Sol. <H> Output_Best_Sol. <R> connected_with <T> T <H> Terminate? <R> No <T> Selection <H> Selection <R> connected_with <T> Promising_Solutions <H> Promising_Solutions <R> connected_with <T> Reproduction <H> Reproduction <R> connected_with <T> New_Solutions <H> New_Solutions <R> connected_with <T> Replacement <H> Replacement <R> connected_with <T> Population_of_solutions                    
<H> Start <R> connected_with <T> Read_N <H> Read_N <R> connected_with <T> M=1_F=1 <H> M=1_F=1 <R> connected_with <T> F=F.M <H> F=F.M <R> connected_with <T> M=N <H> M=N <R> NO <T> M=M+1 <H> M=M+1 <R> connected_with <T> F=F.M <H> M=N <R> YES <T> Print_F <H> Print_F <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_X <H> Input_X <R> connected_with <T> n=1_R=1 <H> n=1_R=1 <R> connected_with <T> R=R.n <H> R=R.n <R> connected_with <T> n=X <H> n=X <R> Yes <T> Disp_R <H> n=X <R> No <T> n=n+1 <H> n=n+1 <R> connected_with <T> R=R.n <H> Disp_R <R> connected_with <T> Stop 
<H> terminator <R> connected_with <T> Input_X <H> Input_X <R> connected_with <T> X=X.X <H> X=X.X <R> connected_with <T> Output_X <H> Output_X <R> connected_with <T> terminator
<H> terminator <R> connected_with <T> Read_n <H> Read_n <R> connected_with <T> n=n.n <H> n=n.n <R> connected_with <T> Print_n <H> Print_n <R> connected_with <T> terminator
<H> Start <R> connected_with <T> Input_A,B <H> Input_A,B <R> connected_with <T> A>=B <H> A>=B <R> No <T> Output_B <H> A>=B <R> Yes <T> Output_A
<H> Begin <R> connected_with <T> Input_X,Y <H> Input_X,Y <R> connected_with <T> X>=Y <H> X>=Y <R> 0 <T> Display_Y <H> X>=Y <R> 1 <T> Display_X
<H> Start <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> sum=0_i=0 <H> sum=0_i=0 <R> connected_with <T> sum=sum+i <H> sum=sum+i <R> connected_with <T> i==n? <H> i==n? <R> No <T> i=i+1 <H> i=i+1 <R> connected_with <T> sum=sum+i <H> i==n? <R> Yes <T> Output_n <H> Output_n <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> k=1_sum=1 <H> k=1_sum=1 <R> connected_with <T> sum=sum+k <H> sum=sum+k <R> connected_with <T> k==n? <H> k==n? <R> 0 <T> k=k+1 <H> k=k+1 <R> connected_with <T> sum=sum+k <H> k==n? <R> 1 <T> Disp_sum <H> Disp_sum <R> connected_with <T> Finish 
<H> start <R> connected_with <T> Input_a,b <H> Input_a,b <R> connected_with <T> r=a%b <H> r=a%b <R> connected_with <T> r=0? <H> r=0? <R> No <T> a=b_b=y <H> a=b_b=y <R> connected_with <T> r=a%b <H> r=0? <R> yes <T> output_b <H> output_b <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_n,m <H> Input_n,m <R> connected_with <T> r=n%m <H> r=n%m <R> connected_with <T> r=0? <H> r=0? <R> True <T> Output_m <H> r=0? <R> False <T> n=m_m=r <H> n=m_m=r <R> connected_with <T> r=n%m <H> output_m <R> connected_with <T> End
<H> terminator <R> connected_with <T> A>B <H> A>B <R> Yes <T> T=B <H> T=B <R> connected_with <T> B=A_A=T <H> A>B <R> No <T> terminator <H> B=A_A=T <R> connected_with <T> terminator 
<H> terminator <R> connected_with <T> X>Y <H> X>Y <R> Then <T> T=Y <H> T=Y <R> connected_with <T> Y=X_X=T <H> X>Y <R> else <T> terminator <H> Y=X_X=T <R> connected_with <T> terminator 
<H> Begin <R> connected_with <T> Input_P <H> Input_P <R> connected_with <T> P>0 <H> P>0 <R> Else <T> Input_P <H> P>0 <R> Then <T> Output_P <H> Output_P <R> connected_with <T> End
<H> Start <R> connected_with <T> Input_V <H> Input_V <R> connected_with <T> V>0 <H> V>0 <R> True <T> Output_V <H> Output_V <R> connected_with <T> end 
<H> Begin <R> connected_with <T> Enter_x <H> Enter_x <R> connected_with <T> calculate_h(x) <H> calculate_h(x) <R> connected_with <T> calculate_g(x) <H> calculate_g(x) <R> connected_with <T> Display_h(x)g(x) <H> Display_h(x)g(x) <R> connected_with <T> End
<H> Start <R> connected_with <T> Input_V <H> Input_V <R> connected_with <T> Compute_f(v) <H> Compute_f(v) <R> connected_with <T> Compute_g(V) <H> Compute_g(V) <R> connected_with <T> Output_f(V)+g(V) <H> Output_f(V)+g(V) <R> connected_with <T> Stop 
<H> terminator <R> connected_with <T> Read_n <H> Read_n <R> connected_with <T> T[1]=T[2]=1_i=3 <H> T[1]=T[i]=1_i=3 <R> connected_with <T> i<n <H> i<n <R> 0 <T> Print_T[n] <H> i<n <R> 1 <T> T[i]=T[i-1]+T[i-2] <H> T[i]=T[i-1]+T[i-2] <R> connected_with <T> i++ <H> i++ <R> connected_with <T> i<n <H> Print_T[n] <R> connected_with <T> terminator
<H> terminator <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> T[1]=T[2]=1_i=3 <H> T[1]=T[i]=1_i=3 <R> connected_with <T> i<n <H> i<n <R> N <T> Output_T[n] <H> i<n <R> Y <T> T[i]=T[i-1]+T[i-2] <H> T[i]=T[i-1]+T[i-2] <R> connected_with <T> i++ <H> i++ <R> connected_with <T> i<n <H> output_T[n] <R> connected_with <T> terminator
<H> Begin <R> connected_with <T> Read_a,b,c <H> Read_a,b,c <R> connected_with <T> A=b2-4ac <H> A=b2-4ac <R> connected_with <T> A<0 <H> A<0 <R> Then <T> Nothing <H> Nothing <R> connected_with <T> End <H> A<0 <R> Else <T> A=0 <H> A=0 <R> Then <T> Output_-b/2a <H> Output_-b/2a <R> connected_with <T> End <H> A=0 <R> Else <T> Output_-b+c/2a <H> Output_-b+c/2a <R> connected_with <T> output_b-a/2a <H> output_b-a/2a <R> connected_with <T> End
<H> Start <R> connected_with <T> input_a,b,c <H> input_a,b,c <R> connected_with <T> A=b2-4ac <H> A=b2-4ac <R> connected_with <T> A<0 <H> A<0 <R> Y <T> No_solution <H> No_solution <R> connected_with <T> End <H> A<0 <R> N <T> A=0 <H> A=0 <R> Y <T> Output_-b/2a <H> Output_-b/2a <R> connected_with <T> End <H> A=0 <R> N <T> Output_-b+c/2a <H> Output_-b+c/2a <R> connected_with <T> output_b-a/2a <H> output_b-a/2a <R> connected_with <T> End
<H> Start <R> connected_with <T> Do_I_want_to_do_this? <H> Do_I_want_to_do_this? <R> No <T> Don't_do_it. <H> Do_I_want_to_do_this? <R> Yes <T> Will_it_likely_end_in_disaster? <H> Will_it_likely_end_in_disaster? <R> connected_with <T> Do_it! <H> Will_it_likely_end_in_disaster? <R> Yes <T> will_it_make_a_good_story_anyway? <H> will_it_make_a_good_story_anyway? <R> connected_with <T> Don't_do_it. <H> will_it_make_a_good_story_anyway? <R> connected_with <T> Do_it!
<H> Start <R> connected_with <T> Do_I_want_to_do_this <H> Do_I_want_to_do_this <R> Yes <T> Do_it! <H> Do_I_want_to_do_this <R> No <T> Will_it_likely_end_in_disaster? <H> Will_it_likely_end_in_disaster? <R> No <T> Do_it! <H> Will_it_likely_end_in_disaster? <R> Yes <T> will_it_make_a_good_story_anyway? <H> will_it_make_a_good_story_anyway? <R> No <T> Don't_do_it. <H> will_it_make_a_good_story_anyway? <R> Yes <T> Do_it!
<H> Start <R> connected_with <T> Read_X <H> Read_X <R> connected_with <T> X>0 <H> X>0 <R> False <T> Read_Y <H> X>0 <R> True <T> X=2.X <H> X=2.X <R> connected_with <T> Halt <H> Read_Y <R> connected_with <T> X=X.Y <H> X=X.Y <R> connected_with <T> Halt
<H> Start <R> connected_with <T> Input_a <H> Input_a <R> connected_with <T> Let_X=a/3 <H> Let_X=a/3 <R> connected_with <T> ls|a-x3|<S? <H> ls|a-x3|<S? <R> Yes <T> Output:The_cube_root_of_a_is_X. <H> Output:The_cube_root_of_a_is_X. <R> connected_with <T> Stop <H> ls|a-x3|<S? <R> No <T> Let_X=X-(X3-a)/3X2 <H> Let_X=X-(X3-a)/3X2 <R> connected_with <T> ls|a-x3|<S?  
<H> Work <R> connected_with <T> Tired? <H> Tired? <R> No <T> Work <H> Tired? <R> Yes <T> Go_to_coffee_maker <H> Go_to_coffee_maker <R> connected_with <T> Fresh_coffee? <H> Fresh_coffee? <R> Yes <T> Drink_coffee <H> Drink_coffee <R> connected_with <T> Tired? <H> Fresh_coffee? <R> No <T> Make_coffee <H> Make_coffee <R> connected_with <T> Drink_coffee
<H> Start <R> connected_with <T> Request_key_from_mem_cached <H> Request_key_from_mem_cached <R> connected_with <T> Does_key_exist? <H> Does_key_exist? <R> No <T> Load_data_from_database <H> Load_data_from_database <R> connected_with <T> Update_memcached <H> Does_key_exist? <R> Yes <T> Use_data <H> Update_memcached <R> connected_with <T> Use_data
<H> terminator <R> connected_with <T> SET_RESULT_TO_ZERO <H> SET_RESULT_TO_ZERO <R> connected_with <T> LSB(MPR)=1? <H> LSB(MPR)=1? <R> No <T> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <H> LSB(MPR)=1? <R> Yes <T> RESULT=RESULT+MPD <H> RESULT=RESULT+MPD <R> connected_with <T> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <H> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <R> connected_with <T> NEXT_LSB_(MPR) <H> NEXT_LSB_(MPR) <R> connected_with <T> DONE_FOR_8_BITS? <H> DONE_FOR_8_BITS? <R> No <T> LSB(MPR)=1? <H> DONE_FOR_8_BITS? <R> Yes <T> terminator
<H> S <R> connected_with <T> Initialisation <H> Initialisation <R> connected_with <T> Population_of_solutions <H> Population_of_solutions <R> connected_with <T> Terminate? <H> Terminate? <R> Yes <T> Output_Best_Sol. <H> Output_Best_Sol. <R> connected_with <T> T <H> Terminate? <R> No <T> Selection <H> Selection <R> connected_with <T> Promising_Solutions <H> Promising_Solutions <R> connected_with <T> Reproduction <H> Reproduction <R> connected_with <T> New_Solutions <H> New_Solutions <R> connected_with <T> Replacement <H> Replacement <R> connected_with <T> Population_of_solutions                    
<H> Start <R> connected_with <T> Read_N <H> Read_N <R> connected_with <T> M=1_F=1 <H> M=1_F=1 <R> connected_with <T> F=F*M <H> F=F*M <R> connected_with <T> M=N <H> M=N <R> NO <T> M=M+1 <H> M=M+1 <R> connected_with <T> F=F*M <H> M=N <R> YES <T> Print_F <H> Print_F <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_X <H> Input_X <R> connected_with <T> n=1_R=1 <H> n=1_R=1 <R> connected_with <T> R=R*n <H> R=R*n <R> connected_with <T> n=x <H> n=x <R> No <T> n=n+1 <H> n=n+1 <R> connected_with <T> R=R*n <H> n=X <R> Yes <T> Disp_R <H> Disp_R <R> connected_with <T> Stop
<H> terminator <R> connected_with <T> Input_X <H> Input_X <R> connected_with <T> X=X*X <H> X=X*X <R> connected_with <T> Output_X <H> Output_X <R> connected_with <T> terminator
<H> terminator <R> connected_with <T> Read_n <H> Read_n <R> connected_with <T> n=n*n <H> n=n*n <R> connected_with <T> Print_n <H> Print_n <R> connected_with <T> terminator
<H> Start <R> connected_with <T> Input_A,B <H> Input_A,B <R> connected_with <T> A>=B <H> A>=B <R> No <T> Output_B <H> A>=B <R> Yes <T> Output_A
<H> Begin <R> connected_with <T> Input_X,Y <H> Input_X,Y <R> connected_with <T> X>=Y <H> X>=Y <R> 0 <T> Display_Y <H> X>=Y <R> 1 <T> Display_X
<H> Start <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> sum=0_i=0 <H> sum=0_i=0 <R> connected_with <T> sum=sum+i <H> sum=sum+i <R> connected_with <T> i==n? <H> i==n? <R> No <T> i=i+1 <H> i=i+1 <R> connected_with <T> sum=sum+i <H> i==n? <R> Yes <T> Output_n <H> Output_n <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> k=1_sum=0 <H> k=1_sum=0 <R> connected_with <T> sum=sum+k <H> sum=sum+k <R> connected_with <T> k==n? <H> k==n? <R> 0 <T> k=k+1 <H> k=k+1 <R> connected_with <T> sum=sum+k <H> k==n? <R> 1 <T> Disp_sum <H> Disp_sum <R> connected_with <T> Finish 
<H> start <R> connected_with <T> Input_a,b <H> Input_a,b <R> connected_with <T> r=a%b <H> r=a%b <R> connected_with <T> r=0? <H> r=0? <R> No <T> a=b_b=y <H> a=b_b=y <R> connected_with <T> r=a%b <H> r=0? <R> yes <T> output_b <H> output_b <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_n,m <H> Input_n,m <R> connected_with <T> r=n%m <H> r=n%m <R> connected_with <T> r=0? <H> r=0? <R> True <T> Output_m <H> r=0? <R> False <T> n=m_m=r <H> n=m_m=r <R> connected_with <T> r=n%m <H> output_m <R> connected_with <T> End
<H> terminator <R> connected_with <T> A>B <H> A>B <R> Yes <T> T=B <H> T=B <R> connected_with <T> B=A_A=T <H> A>B <R> No <T> terminator <H> B=A_A=T <R> connected_with <T> terminator 
<H> terminator <R> connected_with <T> X>Y <H> X>Y <R> Then <T> T=Y <H> T=Y <R> connected_with <T> Y=X_X=T <H> X>Y <R> else <T> terminator <H> Y=X_X=T <R> connected_with <T> terminator 
<H> Begin <R> connected_with <T> Input_P <H> Input_P <R> connected_with <T> P>0 <H> P>0 <R> Else <T> Input_P <H> P>0 <R> Then <T> Output_P <H> Output_P <R> connected_with <T> End
<H> Start <R> connected_with <T> Input_V <H> Input_V <R> connected_with <T> V>0 <H> V>0 <R> True <T> Output_V <H> Output_V <R> connected_with <T> end 
<H> Begin <R> connected_with <T> Enter_x <H> Enter_x <R> connected_with <T> calculate_h(x) <H> calculate_h(x) <R> connected_with <T> calculate_g(x) <H> calculate_g(x) <R> connected_with <T> Display_h(x)g(x) <H> Display_h(x)g(x) <R> connected_with <T> End
<H> Start <R> connected_with <T> Input_V <H> Input_V <R> connected_with <T> Compute_f(v) <H> Compute_f(v) <R> connected_with <T> Compute_g(V) <H> Compute_g(V) <R> connected_with <T> Output_f(V)+g(V) <H> Output_f(V)+g(V) <R> connected_with <T> Stop 
<H> terminator <R> connected_with <T> Read_n <H> Read_n <R> connected_with <T> T[1]=T[2]=1_i=3 <H> T[1]=T[i]=1_i=3 <R> connected_with <T> i<n <H> i<n <R> 0 <T> Print_T[n] <H> i<n <R> 1 <T> T[i]=T[i-1]+T[i-2] <H> T[i]=T[i-1]+T[i-2] <R> connected_with <T> i++ <H> i++ <R> connected_with <T> i<n <H> Print_T[n] <R> connected_with <T> terminator
<H> terminator <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> T[1]=T[2]=1_i=3 <H> T[1]=T[i]=1_i=3 <R> connected_with <T> i<n <H> i<n <R> N <T> Output_T[n] <H> i<n <R> Y <T> T[i]=T[i-1]+T[i-2] <H> T[i]=T[i-1]+T[i-2] <R> connected_with <T> i++ <H> i++ <R> connected_with <T> i<n <H> output_T[n] <R> connected_with <T> terminator
<H> Begin <R> connected_with <T> read_a,b,c <H> read_a,b,c <R> connected_with <T> A=b2-4ac <H> A=b2-4ac <R> connected_with <T> A<0 <H> A<0 <R> then <T> nothing <H> nothing <R> connected_with <T> End <H> A<0 <R> else <T> A=0 <H> A=0 <R> then <T> Output_-b/2a <H> Output_-b/2a <R> connected_with <T> End <H> A=0 <R> else <T> Output_-b+c/2a <H> Output_-b+c/2a <R> connected_with <T> output_b-a/2a <H> output_b-a/2a <R> connected_with <T> End
<H> Start <R> connected_with <T> input_a,b,c <H> input_a,b,c <R> connected_with <T> A=b2-4ac <H> A=b2-4ac <R> connected_with <T> A<0 <H> A<0 <R> Y <T> No_solution <H> No_solution <R> connected_with <T> End <H> A<0 <R> N <T> A=0 <H> A=0 <R> Y <T> Output_-b/2a <H> Output_-b/2a <R> connected_with <T> End <H> A=0 <R> N <T> Output_-b+c/2a <H> Output_-b+c/2a <R> connected_with <T> output_b-a/2a <H> output_b-a/2a <R> connected_with <T> End
<H> Start <R> connected_with <T> Do_I_want_to_do_this? <H> Do_I_want_to_do_this? <R> No <T> Don't_do_it. <H> Do_I_want_to_do_this? <R> Yes <T> Will_it_likely_end_in_disaster? <H> Will_it_likely_end_in_disaster? <R> No <T> Do_it <H> Will_it_likely_end_in_disaster? <R> Yes <T> will_it_make_a_good_story_anyway? <H> will_it_make_a_good_story_anyway? <R> No <T> Don't_do_it. <H> will_it_make_a_good_story_anyway? <R> Yes <T> Do_it!
<H> Start <R> connected_with <T> Do_I_want_to_do_this <H> Do_I_want_to_do_this <R> Yes <T> Do_it! <H> Do_I_want_to_do_this <R> No <T> Will_it_likely_end_in_disaster? <H> Will_it_likely_end_in_disaster? <R> No <T> Do_it! <H> Will_it_likely_end_in_disaster? <R> Yes <T> will_it_make_a_good_story_anyway? <H> will_it_make_a_good_story_anyway? <R> No <T> Don't_do_it. <H> will_it_make_a_good_story_anyway? <R> Yes <T> Do_it!
<H> Start <R> connected_with <T> Read_X <H> Read_X <R> connected_with <T> X>0 <H> X>0 <R> False <T> Read_Y <H> X>0 <R> True <T> X=2*X <H> X=2*X <R> connected_with <T> Halt <H> Read_Y <R> connected_with <T> X=X*Y <H> X=X*Y <R> connected_with <T> Halt
<H> Start <R> connected_with <T> Input_a <H> Input_a <R> connected_with <T> Let_X=a/3 <H> Let_X=a/3 <R> connected_with <T> ls|a-x3|<S? <H> ls|a-x3|<S? <R> Yes <T> Output:The_cube_root_of_a_is_X. <H> Output:The_cube_root_of_a_is_X. <R> connected_with <T> Stop <H> ls|a-x3|<S? <R> No <T> Let_X=X-(X3-a)/3X2 <H> Let_X=X-(X3-a)/3X2 <R> connected_with <T> ls|a-x3|<S?  
<H> Work <R> connected_with <T> Tired? <H> Tired? <R> No <T> Work <H> Tired? <R> Yes <T> Go_to_coffee_maker <H> Go_to_coffee_maker <R> connected_with <T> Fresh_coffee? <H> Fresh_coffee? <R> Yes <T> Drink_coffee <H> Drink_coffee <R> connected_with <T> Tired? <H> Fresh_coffee? <R> No <T> Make_coffee <H> Make_coffee <R> connected_with <T> Drink_coffee
<H> Start <R> connected_with <T> Request_key_from_mem_cached <H> Request_key_from_mem_cached <R> connected_with <T> Does_key_exist? <H> Does_key_exist? <R> No <T> Load_data_from_database <H> Load_data_from_database <R> connected_with <T> Update_memcached <H> Does_key_exist? <R> Yes <T> Use_data <H> Update_memcached <R> connected_with <T> Use_data
<H> terminator <R> connected_with <T> SET_RESULT_TO_ZERO <H> SET_RESULT_TO_ZERO <R> connected_with <T> LSB(MPR)=1? <H> LSB(MPR)=1? <R> No <T> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <H> LSB(MPR)=1? <R> Yes <T> RESULT=RESULT+MPD <H> RESULT=RESULT+MPD <R> connected_with <T> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <H> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <R> connected_with <T> NEXT_LSB_(MPR) <H> NEXT_LSB_(MPR) <R> connected_with <T> DONE_FOR_8_BITS? <H> DONE_FOR_8_BITS? <R> No <T> LSB(MPR)=1? <H> DONE_FOR_8_BITS? <R> Yes <T> terminator
<H> S <R> connected_with <T> Initialisation <H> Initialisation <R> connected_with <T> Population_of_solutions <H> Population_of_solutions <R> connected_with <T> Terminate? <H> Terminate? <R> Yes <T> Output_Best_Sol. <H> Output_Best_Sol. <R> connected_with <T> T <H> Terminate? <R> No <T> Selection <H> Selection <R> connected_with <T> Promising_Solutions <H> Promising_Solutions <R> connected_with <T> Reproduction <H> Reproduction <R> connected_with <T> New_Solutions <H> New_Solutions <R> connected_with <T> Replacement <H> Replacement <R> connected_with <T> Population_of_solutions                    
<H> Start <R> connected_with <T> Read_N <H> Read_N <R> connected_with <T> M=1_F=1 <H> M=1_F=1 <R> connected_with <T> F=F*M <H> F=F*M <R> connected_with <T> M=N <H> M=N <R> NO <T> M=M+1 <H> M=M+1 <R> connected_with <T> F=F*M <H> M=N <R> YES <T> Print_F <H> Print_F <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_X <H> Input_X <R> connected_with <T> n=1_R=1 <H> n=1_R=1 <R> connected_with <T> R=R*n <H> R=R*n <R> connected_with <T> n=X <H> n=X <R> Yes <T> Disp_R <H> n=X <R> No <T> n=n+1 <H> n=n+1 <R> connected_with <T> R=R*n <H> Disp_R <R> connected_with <T> Stop 
<H> terminator <R> connected_with <T> Input_X <H> Input_X <R> connected_with <T> X=X*X <H> X=X*X <R> connected_with <T> Output_X <H> Output_X <R> connected_with <T> terminator
<H> terminator <R> connected_with <T> Read_n <H> Read_n <R> connected_with <T> n=n*n <H> n=n*n <R> connected_with <T> Print_n <H> Print_n <R> connected_with <T> terminator
<H> Start <R> connected_with <T> Input_A,B <H> Input_A,B <R> connected_with <T> A>=B <H> A>=B <R> No <T> Output_B <H> A>=B <R> Yes <T> Output_A
<H> Begin <R> connected_with <T> Input_X,Y <H> Input_X,Y <R> connected_with <T> X>=Y <H> X>=Y <R> 0 <T> Display_Y <H> X>=Y <R> 1 <T> Display_X
<H> Start <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> sum=0_i=0 <H> sum=0_i=0 <R> connected_with <T> sum=sum+i <H> sum=sum+i <R> connected_with <T> i==n? <H> i==n? <R> No <T> i=i+1 <H> i=i+1 <R> connected_with <T> sum=sum+i <H> i==n? <R> Yes <T> Output_n <H> Output_n <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> k=1_sum=0 <H> k=1_sum=0 <R> connected_with <T> sum=sum+k <H> sum=sum+k <R> connected_with <T> k==n? <H> k==n? <R> 0 <T> k=k+1 <H> k=k+1 <R> connected_with <T> sum=sum+k <H> k==n? <R> 1 <T> Disp_sum <H> Disp_sum <R> connected_with <T> Finish 
<H> start <R> connected_with <T> Input_a,b <H> Input_a,b <R> connected_with <T> r=a%b <H> r=a%b <R> connected_with <T> r=0? <H> r=0? <R> No <T> a=b_b=y <H> a=b_b=y <R> connected_with <T> r=a%b <H> r=0? <R> yes <T> output_b <H> output_b <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_n,m <H> Input_n,m <R> connected_with <T> r=n%m <H> r=n%m <R> connected_with <T> r=0? <H> r=0? <R> True <T> Output_m <H> r=0? <R> False <T> n=m_m=r <H> n=m_m=r <R> connected_with <T> r=n%m <H> output_m <R> connected_with <T> End
<H> terminator <R> connected_with <T> A>B <H> A>B <R> Yes <T> T=B <H> T=B <R> connected_with <T> B=A_A=T <H> A>B <R> No <T> terminator
<H> terminator <R> connected_with <T> X>Y <H> X>Y <R> Then <T> T=Y <H> T=Y <R> connected_with <T> Y=X_X=T <H> X>Y <R> else <T> terminator <H> Y=X_X=T <R> connected_with <T> terminator 
<H> Begin <R> connected_with <T> Input_P <H> Input_P <R> connected_with <T> P>0 <H> P>0 <R> Else <T> Input_P <H> P>0 <R> Then <T> Output_P <H> Output_P <R> connected_with <T> End
<H> Start <R> connected_with <T> Input_V <H> Input_V <R> connected_with <T> V>0 <H> V>0 <R> True <T> Output_V <H> Output_V <R> connected_with <T> end 
<H> Begin <R> connected_with <T> Enter_x <H> Enter_x <R> connected_with <T> calculate_h(x) <H> calculate_h(x) <R> connected_with <T> calculate_g(x) <H> calculate_g(x) <R> connected_with <T> Display_h(x)g(x) <H> Display_h(x)g(x) <R> connected_with <T> End
<H> Start <R> connected_with <T> Input_V <H> Input_V <R> connected_with <T> Compute_f(v) <H> Compute_f(v) <R> connected_with <T> Compute_g(V) <H> Compute_g(V) <R> connected_with <T> Output_f(V)+g(V) <H> Output_f(V)+g(V) <R> connected_with <T> Stop 
<H> terminator <R> connected_with <T> Read_n <H> Read_n <R> connected_with <T> T[1]=T[2]=1_i=3 <H> T[1]=T[i]=1_i=3 <R> connected_with <T> i<n <H> i<n <R> 0 <T> Print_T[n] <H> i<n <R> 1 <T> T[i]=T[i-1]+T[i-2] <H> T[i]=T[i-1]+T[i-2] <R> connected_with <T> i++ <H> i++ <R> connected_with <T> i<n <H> Print_T[n] <R> connected_with <T> terminator
<H> terminator <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> T[1]=T[2]=1_i=3 <H> T[1]=T[i]=1_i=3 <R> connected_with <T> i<n <H> i<n <R> N <T> Output_T[n] <H> i<n <R> Y <T> T[i]=T[i-1]+T[i-2] <H> T[i]=T[i-1]+T[i-2] <R> connected_with <T> i++ <H> i++ <R> connected_with <T> i<n <H> output_T[n] <R> connected_with <T> terminator
<H> Begin <R> connected_with <T> read_a,b,c <H> read_a,b,c <R> connected_with <T> A=b2-4ac <H> A=b2-4ac <R> connected_with <T> A<0 <H> A<0 <R> then <T> nothing <H> nothing <R> connected_with <T> End <H> A<0 <R> else <T> A=0 <H> A=0 <R> then <T> Output_-b/2a <H> Output_-b/2a <R> connected_with <T> End <H> A=0 <R> else <T> Output_-b+c/2a <H> Output_-b+c/2a <R> connected_with <T> output_b-a/2a <H> output_b-a/2a <R> connected_with <T> End
<H> Start <R> connected_with <T> input_a,b,c <H> input_a,b,c <R> connected_with <T> A=b2-4ac <H> A=b2-4ac <R> connected_with <T> A<0 <H> A<0 <R> Y <T> No_solution <H> No_solution <R> connected_with <T> End <H> A<0 <R> N <T> A=0 <H> A=0 <R> Y <T> Output_-b/2a <H> Output_-b/2a <R> connected_with <T> End <H> A=0 <R> N <T> Output_-b+c/2a <H> Output_-b+c/2a <R> connected_with <T> output_b-a/2a <H> output_b-a/2a <R> connected_with <T> End
<H> Start <R> connected_with <T> Do_I_want_to_do_this? <H> Do_I_want_to_do_this? <R> No <T> Don't_do_it. <H> Do_I_want_to_do_this? <R> Yes <T> Will_it_likely_end_in_disaster? <H> Will_it_likely_end_in_disaster? <R> No <T> Do_it <H> Will_it_likely_end_in_disaster? <R> Yes <T> will_it_make_a_good_story_anyway? <H> will_it_make_a_good_story_anyway? <R> No <T> Don't_do_it. <H> will_it_make_a_good_story_anyway? <R> Yes <T> Do_it!
<H> Start <R> connected_with <T> Do_I_want_to_do_this <H> Do_I_want_to_do_this <R> Yes <T> Do_it! <H> Do_I_want_to_do_this <R> No <T> Will_it_likely_end_in_disaster? <H> Will_it_likely_end_in_disaster? <R> No <T> Do_it! <H> Will_it_likely_end_in_disaster? <R> Yes <T> will_it_make_a_good_story_anyway? <H> will_it_make_a_good_story_anyway? <R> No <T> Don't_do_it. <H> will_it_make_a_good_story_anyway? <R> Yes <T> Do_it!
<H> Start <R> connected_with <T> Read_X <H> Read_X <R> connected_with <T> X>0 <H> X>0 <R> False <T> Read_Y <H> X>0 <R> True <T> X=2*X <H> X=2*X <R> connected_with <T> Halt <H> Read_Y <R> connected_with <T> X=X*Y <H> X=X*Y <R> connected_with <T> Halt
<H> Start <R> connected_with <T> Input_a <H> Input_a <R> connected_with <T> Let_X=a/3 <H> Let_X=a/3 <R> connected_with <T> ls|a-x3|<S? <H> ls|a-x3|<S? <R> Yes <T> Output:The_cube_root_of_a_is_X. <H> Output:The_cube_root_of_a_is_X. <R> connected_with <T> Stop <H> ls|a-x3|<S? <R> No <T> Let_X=X-(X3-a)/3X2 <H> Let_X=X-(X3-a)/3X2 <R> connected_with <T> ls|a-x3|<S?  
<H> Work <R> connected_with <T> Tired? <H> Tired? <R> No <T> Work <H> Tired? <R> Yes <T> Go_to_coffee_maker <H> Go_to_coffee_maker <R> connected_with <T> Fresh_coffee? <H> Fresh_coffee? <R> Yes <T> Drink_coffee <H> Drink_coffee <R> connected_with <T> Tired? <H> Fresh_coffee? <R> No <T> Make_coffee <H> Make_coffee <R> connected_with <T> Drink_coffee
<H> Start <R> connected_with <T> Request_key_from_mem_cached <H> Request_key_from_mem_cached <R> connected_with <T> Does_key_exist? <H> Does_key_exist? <R> No <T> Load_data_from_database <H> Load_data_from_database <R> connected_with <T> Update_memcached <H> Does_key_exist? <R> Yes <T> Use_data <H> Update_memcached <R> connected_with <T> Use_data
<H> terminator <R> connected_with <T> SET_RESULT_TO_ZERO <H> SET_RESULT_TO_ZERO <R> connected_with <T> LSB(MPR)=1? <H> LSB(MPR)=1? <R> No <T> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <H> LSB(MPR)=1? <R> Yes <T> RESULT=RESULT+MPD <H> RESULT=RESULT+MPD <R> connected_with <T> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <H> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <R> connected_with <T> NEXT_LSB_(MPR) <H> NEXT_LSB_(MPR) <R> connected_with <T> DONE_FOR_8_BITS? <H> DONE_FOR_8_BITS? <R> No <T> LSB(MPR)=1? <H> DONE_FOR_8_BITS? <R> Yes <T> terminator
<H> S <R> connected_with <T> Initialisation <H> Initialisation <R> connected_with <T> Population_of_solutions <H> Population_of_solutions <R> connected_with <T> Terminate? <H> Terminate? <R> Yes <T> Output_Best_Sol. <H> Output_Best_Sol. <R> connected_with <T> T <H> Terminate? <R> No <T> Selection <H> Selection <R> connected_with <T> Promising_Solutions <H> Promising_Solutions <R> connected_with <T> Reproduction <H> Reproduction <R> connected_with <T> New_Solutions <H> New_Solutions <R> connected_with <T> Replacement <H> Replacement <R> connected_with <T> Population_of_solutions                    
<H> Start <R> connected_with <T> Read_N <H> Read_N <R> connected_with <T> M=1_F=1 <H> M=1_F=1 <R> connected_with <T> F=F*M <H> F=F*M <R> connected_with <T> M=N <H> M=N <R> NO <T> M=M+1 <H> M=M+1 <R> connected_with <T> F=F*M <H> M=N <R> YES <T> Print_F <H> Print_F <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_X <H> Input_X <R> connected_with <T> n=1_R=1 <H> n=1_R=1 <R> connected_with <T> R=R*n <H> R=R*n <R> connected_with <T> n=X <H> n=X <R> Yes <T> Disp_R <H> n=X <R> No <T> n=n+1 <H> n=n+1 <R> connected_with <T> R=R*n <H> Disp_R <R> connected_with <T> Stop 
<H> terminator <R> connected_with <T> Input_X <H> Input_X <R> connected_with <T> X=X*X <H> X=X*X <R> connected_with <T> Output_X <H> Output_X <R> connected_with <T> terminator
<H> terminator <R> connected_with <T> Read_n <H> Read_n <R> connected_with <T> n=n*n <H> n=n*n <R> connected_with <T> Print_n <H> Print_n <R> connected_with <T> terminator
<H> Start <R> connected_with <T> Input_A,B <H> Input_A,B <R> connected_with <T> A>=B <H> A>=B <R> No <T> Output_B <H> A>=B <R> Yes <T> Output_A
<H> Begin <R> connected_with <T> Input_X,Y <H> Input_X,Y <R> connected_with <T> X>=Y <H> X>=Y <R> 0 <T> Display_Y <H> X>=Y <R> 1 <T> Display_X
<H> Start <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> sum=0_i=0 <H> sum=0_i=0 <R> connected_with <T> sum=sum+i <H> sum=sum+i <R> connected_with <T> i==n? <H> i==n? <R> No <T> i=i+1 <H> i=i+1 <R> connected_with <T> sum=sum+i <H> i==n? <R> Yes <T> Output_n <H> Output_n <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> k=1_sum=0 <H> k=1_sum=0 <R> connected_with <T> sum=sum+k <H> sum=sum+k <R> connected_with <T> k==n? <H> k==n? <R> 0 <T> k=k+1 <H> k=k+1 <R> connected_with <T> sum=sum+k <H> k==n? <R> 1 <T> Disp_sum <H> Disp_sum <R> connected_with <T> Finish 
<H> start <R> connected_with <T> Input_a,b <H> Input_a,b <R> connected_with <T> r=a%b <H> r=a%b <R> connected_with <T> r=0? <H> r=0? <R> No <T> a=b_and_b=y <H> a=b_and_b=y <R> connected_with <T> r=a%b <H> r=0? <R> yes <T> output_b <H> output_b <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_n,m <H> Input_n,m <R> connected_with <T> r=n%m <H> r=n%m <R> connected_with <T> r=0? <H> r=0? <R> True <T> Output_m <H> r=0? <R> False <T> n=m_m=r <H> n=m_m=r <R> connected_with <T> r=n%m <H> output_m <R> connected_with <T> End
<H> terminator <R> connected_with <T> A>B <H> A>B <R> Yes <T> T=B <H> T=B <R> connected_with <T> B=A_A=T <H> A>B <R> No <T> terminator
<H> terminator <R> connected_with <T> X>Y <H> X>Y <R> Then <T> T=Y <H> T=Y <R> connected_with <T> Y=X_X=T <H> X>Y <R> else <T> terminator <H> Y=X_X=T <R> connected_with <T> terminator 
<H> Begin <R> connected_with <T> Input_P <H> Input_P <R> connected_with <T> P>0 <H> P>0 <R> Else <T> Input_P <H> P>0 <R> Then <T> Output_P <H> Output_P <R> connected_with <T> End
<H> Start <R> connected_with <T> Input_V <H> Input_V <R> connected_with <T> V>0 <H> V>0 <R> True <T> Output_V <H> Output_V <R> connected_with <T> end 
<H> Begin <R> connected_with <T> Enter_x <H> Enter_x <R> connected_with <T> calculate_h(x) <H> calculate_h(x) <R> connected_with <T> calculate_g(x) <H> calculate_g(x) <R> connected_with <T> Display_h(x)g(x) <H> Display_h(x)g(x) <R> connected_with <T> End
<H> Start <R> connected_with <T> Input_V <H> Input_V <R> connected_with <T> Compute_f(v) <H> Compute_f(v) <R> connected_with <T> Compute_g(V) <H> Compute_g(V) <R> connected_with <T> Output_f(V)+g(V) <H> Output_f(V)+g(V) <R> connected_with <T> Stop 
<H> terminator <R> connected_with <T> Read_n <H> Read_n <R> connected_with <T> T[1]=T[2]=1_i=3 <H> T[1]=T[i]=1_i=3 <R> connected_with <T> i<n <H> i<n <R> 0 <T> Print_T[n] <H> i<n <R> 1 <T> T[i]=T[i-1]+T[i-2] <H> T[i]=T[i-1]+T[i-2] <R> connected_with <T> i++ <H> i++ <R> connected_with <T> i<n <H> Print_T[n] <R> connected_with <T> terminator
<H> terminator <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> T[1]=T[2]=1_i=3 <H> T[1]=T[i]=1_i=3 <R> connected_with <T> i<n <H> i<n <R> N <T> Output_T[n] <H> i<n <R> Y <T> T[i]=T[i-1]+T[i-2] <H> T[i]=T[i-1]+T[i-2] <R> connected_with <T> i++ <H> i++ <R> connected_with <T> i<n <H> output_T[n] <R> connected_with <T> terminator
<H> Begin <R> connected_with <T> read_a,b,c <H> read_a,b,c <R> connected_with <T> A=b2-4ac <H> A=b2-4ac <R> connected_with <T> A<0 <H> A<0 <R> then <T> nothing <H> nothing <R> connected_with <T> End <H> A<0 <R> else <T> A=0 <H> A=0 <R> then <T> Output_-b/2a <H> Output_-b/2a <R> connected_with <T> End <H> A=0 <R> else <T> Output_-b+c/2a <H> Output_-b+c/2a <R> connected_with <T> output_b-a/2a <H> output_b-a/2a <R> connected_with <T> End
<H> Start <R> connected_with <T> input_a,b,c <H> input_a,b,c <R> connected_with <T> A=b2-4ac <H> A=b2-4ac <R> connected_with <T> A<0 <H> A<0 <R> Y <T> No_solution <H> No_solution <R> connected_with <T> End <H> A<0 <R> N <T> A=0 <H> A=0 <R> Y <T> Output_-b/2a <H> Output_-b/2a <R> connected_with <T> End <H> A=0 <R> N <T> Output_-b+c/2a <H> Output_-b+c/2a <R> connected_with <T> output_b-a/2a <H> output_b-a/2a <R> connected_with <T> End
<H> Start <R> connected_with <T> Do_I_want_to_do_this? <H> Do_I_want_to_do_this? <R> No <T> Don't_do_it. <H> Do_I_want_to_do_this? <R> Yes <T> Will_it_likely_end_in_disaster? <H> Will_it_likely_end_in_disaster? <R> No <T> Do_it <H> Will_it_likely_end_in_disaster? <R> Yes <T> will_it_make_a_good_story_anyway? <H> will_it_make_a_good_story_anyway? <R> No <T> Don't_do_it. <H> will_it_make_a_good_story_anyway? <R> Yes <T> Do_it!
<H> Start <R> connected_with <T> Do_I_want_to_do_this <H> Do_I_want_to_do_this <R> Yes <T> Do_it! <H> Do_I_want_to_do_this <R> No <T> Will_it_likely_end_in_disaster? <H> Will_it_likely_end_in_disaster? <R> No <T> Do_it! <H> Will_it_likely_end_in_disaster? <R> Yes <T> will_it_make_a_good_story_anyway? <H> will_it_make_a_good_story_anyway? <R> No <T> Don't_do_it. <H> will_it_make_a_good_story_anyway? <R> Yes <T> Do_it!
<H> Start <R> connected_with <T> Read_X <H> Read_X <R> connected_with <T> X>0 <H> X>0 <R> False <T> Read_Y <H> X>0 <R> True <T> X=2*X <H> X=2*X <R> connected_with <T> Halt <H> Read_Y <R> connected_with <T> X=X*Y <H> X=X*Y <R> connected_with <T> Halt
<H> Start <R> connected_with <T> Input_a <H> Input_a <R> connected_with <T> Let_X=a/3 <H> Let_X=a/3 <R> connected_with <T> ls|a-x3|<S? <H> ls|a-x3|<S? <R> Yes <T> Output:The_cube_root_of_a_is_X. <H> Output:The_cube_root_of_a_is_X. <R> connected_with <T> Stop <H> ls|a-x3|<S? <R> No <T> Let_X=X-(X3-a)/3X2 <H> Let_X=X-(X3-a)/3X2 <R> connected_with <T> ls|a-x3|<S?  
<H> Work <R> connected_with <T> Tired? <H> Tired? <R> No <T> Work <H> Tired? <R> Yes <T> Go_to_coffee_maker <H> Go_to_coffee_maker <R> connected_with <T> Fresh_coffee? <H> Fresh_coffee? <R> Yes <T> Drink_coffee <H> Drink_coffee <R> connected_with <T> Tired? <H> Fresh_coffee? <R> No <T> Make_coffee <H> Make_coffee <R> connected_with <T> Drink_coffee
<H> Start <R> connected_with <T> Request_key_from_mem_cached <H> Request_key_from_mem_cached <R> connected_with <T> Does_key_exist? <H> Does_key_exist? <R> No <T> Load_data_from_database <H> Load_data_from_database <R> connected_with <T> Update_memcached <H> Does_key_exist? <R> Yes <T> Use_data <H> Update_memcached <R> connected_with <T> Use_data
<H> terminator <R> connected_with <T> SET_RESULT_TO_ZERO <H> SET_RESULT_TO_ZERO <R> connected_with <T> LSB(MPR)=1? <H> LSB(MPR)=1? <R> No <T> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <H> LSB(MPR)=1? <R> Yes <T> RESULT=RESULT+MPD <H> RESULT=RESULT+MPD <R> connected_with <T> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <H> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <R> connected_with <T> NEXT_LSB_(MPR) <H> NEXT_LSB_(MPR) <R> connected_with <T> DONE_FOR_8_BITS? <H> DONE_FOR_8_BITS? <R> No <T> LSB(MPR)=1? <H> DONE_FOR_8_BITS? <R> Yes <T> terminator
<H> S <R> connected_with <T> Initialisation <H> Initialisation <R> connected_with <T> Population_of_solutions <H> Population_of_solutions <R> connected_with <T> Terminate? <H> Terminate? <R> Yes <T> Output_Best_Sol. <H> Output_Best_Sol. <R> connected_with <T> T <H> Terminate? <R> No <T> Selection <H> Selection <R> connected_with <T> Promising_Solutions <H> Promising_Solutions <R> connected_with <T> Reproduction <H> Reproduction <R> connected_with <T> New_Solutions <H> New_Solutions <R> connected_with <T> Replacement <H> Replacement <R> connected_with <T> Population_of_solutions                    
<H> Start <R> connected_with <T> Read_N <H> Read_N <R> connected_with <T> M=1_F=1 <H> M=1_F=1 <R> connected_with <T> F=F*M <H> F=F*M <R> connected_with <T> M=N <H> M=N <R> NO <T> M=M+1 <H> M=M+1 <R> connected_with <T> F=F*M <H> M=N <R> YES <T> Print_F <H> Print_F <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_X <H> Input_X <R> connected_with <T> n=1_R=1 <H> n=1_R=1 <R> connected_with <T> R=R*n <H> R=R*n <R> connected_with <T> n=X <H> n=X <R> Yes <T> Disp_R <H> n=X <R> No <T> n=n+1 <H> n=n+1 <R> connected_with <T> R=R*n <H> Disp_R <R> connected_with <T> Stop 
<H> terminator <R> connected_with <T> Input_X <H> Input_X <R> connected_with <T> X=X*X <H> X=X*X <R> connected_with <T> Output_X <H> Output_X <R> connected_with <T> terminator
<H> terminator <R> connected_with <T> Read_n <H> Read_n <R> connected_with <T> n=n*n <H> n=n*n <R> connected_with <T> Print_n <H> Print_n <R> connected_with <T> terminator
<H> Start <R> connected_with <T> Input_A,B <H> Input_A,B <R> connected_with <T> A>=B <H> A>=B <R> No <T> Output_B <H> A>=B <R> Yes <T> Output_A
<H> Begin <R> connected_with <T> Input_X,Y <H> Input_X,Y <R> connected_with <T> X>=Y <H> X>=Y <R> 0 <T> Display_Y <H> X>=Y <R> 1 <T> Display_X
<H> Start <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> sum=0_i=0 <H> sum=0_i=0 <R> connected_with <T> sum=sum+i <H> sum=sum+i <R> connected_with <T> i==n? <H> i==n? <R> No <T> i=i+1 <H> i=i+1 <R> connected_with <T> sum=sum+i <H> i==n? <R> Yes <T> Output_n <H> Output_n <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> k=1_sum=0 <H> k=1_sum=0 <R> connected_with <T> sum=sum+k <H> sum=sum+k <R> connected_with <T> k==n? <H> k==n? <R> 0 <T> k=k+1 <H> k=k+1 <R> connected_with <T> sum=sum+k <H> k==n? <R> 1 <T> Disp_sum <H> Disp_sum <R> connected_with <T> Finish 
<H> start <R> connected_with <T> Input_a,b <H> Input_a,b <R> connected_with <T> r=a%b <H> r=a%b <R> connected_with <T> r=0? <H> r=0? <R> No <T> a=b_b=y <H> a=b_b=y <R> connected_with <T> r=a%b <H> r=0? <R> yes <T> output_b <H> output_b <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_n,m <H> Input_n,m <R> connected_with <T> r=n%m <H> r=n%m <R> connected_with <T> r=0? <H> r=0? <R> True <T> Output_m <H> r=0? <R> False <T> n=m_m=r <H> n=m_m=r <R> connected_with <T> r=n%m <H> output_m <R> connected_with <T> End
<H> terminator <R> connected_with <T> A>B <H> A>B <R> Yes <T> T=B <H> T=B <R> connected_with <T> B=A_A=T <H> A>B <R> No <T> terminator
<H> terminator <R> connected_with <T> X>Y <H> X>Y <R> Then <T> T=Y <H> T=Y <R> connected_with <T> Y=X_X=T <H> X>Y <R> else <T> terminator <H> Y=X_X=T <R> connected_with <T> terminator 
<H> Begin <R> connected_with <T> Input_P <H> Input_P <R> connected_with <T> P>0 <H> P>0 <R> Else <T> Input_P <H> P>0 <R> Then <T> Output_P <H> Output_P <R> connected_with <T> End
<H> Start <R> connected_with <T> Input_V <H> Input_V <R> connected_with <T> V>0 <H> V>0 <R> True <T> Output_V <H> Output_V <R> connected_with <T> end 
<H> Begin <R> connected_with <T> Enter_x <H> Enter_x <R> connected_with <T> calculate_h(x) <H> calculate_h(x) <R> connected_with <T> calculate_g(x) <H> calculate_g(x) <R> connected_with <T> Display_h(x)g(x) <H> Display_h(x)g(x) <R> connected_with <T> End
<H> Start <R> connected_with <T> Input_V <H> Input_V <R> connected_with <T> Compute_f(v) <H> Compute_f(v) <R> connected_with <T> Compute_g(V) <H> Compute_g(V) <R> connected_with <T> Output_f(V)+g(V) <H> Output_f(V)+g(V) <R> connected_with <T> Stop 
<H> terminator <R> connected_with <T> Read_n <H> Read_n <R> connected_with <T> T[1]=T[2]=1_i=3 <H> T[1]=T[i]=1_i=3 <R> connected_with <T> i<n <H> i<n <R> 0 <T> Print_T[n] <H> i<n <R> 1 <T> T[i]=T[i-1]+T[i-2] <H> T[i]=T[i-1]+T[i-2] <R> connected_with <T> i++ <H> i++ <R> connected_with <T> i<n <H> Print_T[n] <R> connected_with <T> terminator
<H> terminator <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> T[1]=T[2]=1_i=3 <H> T[1]=T[i]=1_i=3 <R> connected_with <T> i<n <H> i<n <R> N <T> Output_T[n] <H> i<n <R> Y <T> T[i]=T[i-1]+T[i-2] <H> T[i]=T[i-1]+T[i-2] <R> connected_with <T> i++ <H> i++ <R> connected_with <T> i<n <H> output_T[n] <R> connected_with <T> terminator
<H> Begin <R> connected_with <T> read_a,b,c <H> read_a,b,c <R> connected_with <T> A=b2-4ac <H> A=b2-4ac <R> connected_with <T> A<0 <H> A<0 <R> then <T> nothing <H> nothing <R> connected_with <T> End <H> A<0 <R> else <T> A=0 <H> A=0 <R> then <T> Output_-b/2a <H> Output_-b/2a <R> connected_with <T> End <H> A=0 <R> else <T> Output_-b+c/2a <H> Output_-b+c/2a <R> connected_with <T> output_b-a/2a <H> output_b-a/2a <R> connected_with <T> End
<H> Start <R> connected_with <T> input_a,b,c <H> input_a,b,c <R> connected_with <T> A=b2-4ac <H> A=b2-4ac <R> connected_with <T> A<0 <H> A<0 <R> Y <T> No_solution <H> No_solution <R> connected_with <T> End <H> A<0 <R> N <T> A=0 <H> A=0 <R> Y <T> Output_-b/2a <H> Output_-b/2a <R> connected_with <T> End <H> A=0 <R> N <T> Output_-b+c/2a <H> Output_-b+c/2a <R> connected_with <T> output_b-a/2a <H> output_b-a/2a <R> connected_with <T> End
<H> Start <R> connected_with <T> Do_I_want_to_do_this? <H> Do_I_want_to_do_this? <R> No <T> Don't_do_it. <H> Do_I_want_to_do_this? <R> Yes <T> Will_it_likely_end_in_disaster? <H> Will_it_likely_end_in_disaster? <R> No <T> Do_it <H> Will_it_likely_end_in_disaster? <R> Yes <T> will_it_make_a_good_story_anyway? <H> will_it_make_a_good_story_anyway? <R> No <T> Don't_do_it. <H> will_it_make_a_good_story_anyway? <R> Yes <T> Do_it!
<H> Start <R> connected_with <T> Do_I_want_to_do_this <H> Do_I_want_to_do_this <R> Yes <T> Do_it! <H> Do_I_want_to_do_this <R> No <T> Will_it_likely_end_in_disaster? <H> Will_it_likely_end_in_disaster? <R> No <T> Do_it! <H> Will_it_likely_end_in_disaster? <R> Yes <T> will_it_make_a_good_story_anyway? <H> will_it_make_a_good_story_anyway? <R> No <T> Don't_do_it. <H> will_it_make_a_good_story_anyway? <R> Yes <T> Do_it!
<H> Start <R> connected_with <T> Read_X <H> Read_X <R> connected_with <T> X>0 <H> X>0 <R> False <T> Read_Y <H> X>0 <R> True <T> X=2*X <H> X=2*X <R> connected_with <T> Halt <H> Read_Y <R> connected_with <T> X=X*Y <H> X=X*Y <R> connected_with <T> Halt
<H> Start <R> connected_with <T> Input_a <H> Input_a <R> connected_with <T> Let_X=a/3 <H> Let_X=a/3 <R> connected_with <T> ls|a-x3|<S? <H> ls|a-x3|<S? <R> Yes <T> Output:The_cube_root_of_a_is_X. <H> Output:The_cube_root_of_a_is_X. <R> connected_with <T> Stop <H> ls|a-x3|<S? <R> No <T> Let_X=X-(X3-a)/3X2 <H> Let_X=X-(X3-a)/3X2 <R> connected_with <T> ls|a-x3|<S?  
<H> Work <R> connected_with <T> Tired? <H> Tired? <R> No <T> Work <H> Tired? <R> Yes <T> Go_to_coffee_maker <H> Go_to_coffee_maker <R> connected_with <T> Fresh_coffee? <H> Fresh_coffee? <R> Yes <T> Drink_coffee <H> Drink_coffee <R> connected_with <T> Tired? <H> Fresh_coffee? <R> No <T> Make_coffee <H> Make_coffee <R> connected_with <T> Drink_coffee
<H> Start <R> connected_with <T> Request_key_from_mem_cached <H> Request_key_from_mem_cached <R> connected_with <T> Does_key_exist? <H> Does_key_exist? <R> No <T> Load_data_from_database <H> Load_data_from_database <R> connected_with <T> Update_memcached <H> Does_key_exist? <R> Yes <T> Use_data <H> Update_memcached <R> connected_with <T> Use_data
<H> terminator <R> connected_with <T> SET_RESULT_TO_ZERO <H> SET_RESULT_TO_ZERO <R> connected_with <T> LSB(MPR)=1? <H> LSB(MPR)=1? <R> No <T> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <H> LSB(MPR)=1? <R> Yes <T> RESULT=RESULT+MPD <H> RESULT=RESULT+MPD <R> connected_with <T> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <H> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <R> connected_with <T> NEXT_LSB_(MPR) <H> NEXT_LSB_(MPR) <R> connected_with <T> DONE_FOR_8_BITS? <H> DONE_FOR_8_BITS? <R> No <T> LSB(MPR)=1? <H> DONE_FOR_8_BITS? <R> Yes <T> terminator
<H> S <R> connected_with <T> Initialisation <H> Initialisation <R> connected_with <T> Population_of_solutions <H> Population_of_solutions <R> connected_with <T> Terminate? <H> Terminate? <R> Yes <T> Output_Best_Sol. <H> Output_Best_Sol. <R> connected_with <T> T <H> Terminate? <R> No <T> Selection <H> Selection <R> connected_with <T> Promising_Solutions <H> Promising_Solutions <R> connected_with <T> Reproduction <H> Reproduction <R> connected_with <T> New_Solutions <H> New_Solutions <R> connected_with <T> Replacement <H> Replacement <R> connected_with <T> Population_of_solutions                    
<H> Start <R> connected_with <T> Read_N <H> Read_N <R> connected_with <T> M=1_F=1 <H> M=1_F=1 <R> connected_with <T> F=F*M <H> F=F*M <R> connected_with <T> M=N <H> M=N <R> NO <T> M=M+1 <H> M=M+1 <R> connected_with <T> F=F*M <H> M=N <R> YES <T> Print_F <H> Print_F <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_X <H> Input_X <R> connected_with <T> n=1_R=1 <H> n=1_R=1 <R> connected_with <T> R=R*n <H> R=R*n <R> connected_with <T> n=X <H> n=X <R> Yes <T> Disp_R <H> n=X <R> No <T> n=n+1 <H> n=n+1 <R> connected_with <T> R=R*n <H> Disp_R <R> connected_with <T> Stop 
<H> terminator <R> connected_with <T> Input_X <H> Input_X <R> connected_with <T> X=X*X <H> X=X*X <R> connected_with <T> Output_X <H> Output_X <R> connected_with <T> terminator
<H> terminator <R> connected_with <T> Read_n <H> Read_n <R> connected_with <T> n=n*n <H> n=n*n <R> connected_with <T> Print_n <H> Print_n <R> connected_with <T> terminator
<H> Start <R> connected_with <T> Input_A,B <H> Input_A,B <R> connected_with <T> A>=B <H> A>=B <R> No <T> Output_B <H> A>=B <R> Yes <T> Output_A
<H> Begin <R> connected_with <T> Input_X,Y <H> Input_X,Y <R> connected_with <T> X>=Y <H> X>=Y <R> 0 <T> Display_Y <H> X>=Y <R> 1 <T> Display_X
<H> Start <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> sum=0_i=0 <H> sum=0_i=0 <R> connected_with <T> sum=sum+i <H> sum=sum+i <R> connected_with <T> i==n? <H> i==n? <R> No <T> i=i+1 <H> i=i+1 <R> connected_with <T> sum=sum+i <H> i==n? <R> Yes <T> Output_n <H> Output_n <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> k=1_sum=0 <H> k=1_sum=0 <R> connected_with <T> sum=sum+k <H> sum=sum+k <R> connected_with <T> k==n? <H> k==n? <R> 0 <T> k=k+1 <H> k=k+1 <R> connected_with <T> sum=sum+k <H> k==n? <R> 1 <T> Disp_sum <H> Disp_sum <R> connected_with <T> Finish 
<H> start <R> connected_with <T> Input_a,b <H> Input_a,b <R> connected_with <T> r=a%b <H> r=a%b <R> connected_with <T> r=0? <H> r=0? <R> No <T> a=b_and_b=y <H> a=b_and_b=y <R> connected_with <T> r=a%b <H> r=0? <R> yes <T> output_b <H> output_b <R> connected_with <T> End
<H> Begin <R> connected_with <T> Input_n,m <H> Input_n,m <R> connected_with <T> r=n%m <H> r=n%m <R> connected_with <T> r=0? <H> r=0? <R> True <T> Output_m <H> r=0? <R> False <T> n=m_m=r <H> n=m_m=r <R> connected_with <T> r=n%m <H> output_m <R> connected_with <T> End
<H> terminator <R> connected_with <T> A>B <H> A>B <R> Yes <T> T=B <H> T=B <R> connected_with <T> B=A_A=T <H> A>B <R> No <T> terminator
<H> terminator <R> connected_with <T> X>Y <H> X>Y <R> Then <T> T=Y <H> T=Y <R> connected_with <T> Y=X_X=T <H> X>Y <R> else <T> terminator <H> Y=X_X=T <R> connected_with <T> terminator 
<H> Begin <R> connected_with <T> Input_P <H> Input_P <R> connected_with <T> P>0 <H> P>0 <R> Else <T> Input_P <H> P>0 <R> Then <T> Output_P <H> Output_P <R> connected_with <T> End
<H> Start <R> connected_with <T> Input_V <H> Input_V <R> connected_with <T> V>0 <H> V>0 <R> True <T> Output_V <H> Output_V <R> connected_with <T> end 
<H> Begin <R> connected_with <T> Enter_x <H> Enter_x <R> connected_with <T> calculate_h(x) <H> calculate_h(x) <R> connected_with <T> calculate_g(x) <H> calculate_g(x) <R> connected_with <T> Display_h(x)g(x) <H> Display_h(x)g(x) <R> connected_with <T> End
<H> Start <R> connected_with <T> Input_V <H> Input_V <R> connected_with <T> Compute_f(v) <H> Compute_f(v) <R> connected_with <T> Compute_g(V) <H> Compute_g(V) <R> connected_with <T> Output_f(V)+g(V) <H> Output_f(V)+g(V) <R> connected_with <T> Stop 
<H> terminator <R> connected_with <T> Read_n <H> Read_n <R> connected_with <T> T[1]=T[2]=1_i=3 <H> T[1]=T[i]=1_i=3 <R> connected_with <T> i<n <H> i<n <R> 0 <T> Print_T[n] <H> i<n <R> 1 <T> T[i]=T[i-1]+T[i-2] <H> T[i]=T[i-1]+T[i-2] <R> connected_with <T> i++ <H> i++ <R> connected_with <T> i<n <H> Print_T[n] <R> connected_with <T> terminator
<H> terminator <R> connected_with <T> Input_n <H> Input_n <R> connected_with <T> T[1]=T[2]=1_i=3 <H> T[1]=T[i]=1_i=3 <R> connected_with <T> i<n <H> i<n <R> N <T> Output_T[n] <H> i<n <R> Y <T> T[i]=T[i-1]+T[i-2] <H> T[i]=T[i-1]+T[i-2] <R> connected_with <T> i++ <H> i++ <R> connected_with <T> i<n <H> output_T[n] <R> connected_with <T> terminator
<H> Begin <R> connected_with <T> read_a,b,c <H> read_a,b,c <R> connected_with <T> A=b2-4ac <H> A=b2-4ac <R> connected_with <T> A<0 <H> A<0 <R> then <T> nothing <H> nothing <R> connected_with <T> End <H> A<0 <R> else <T> A=0 <H> A=0 <R> then <T> Output_-b/2a <H> Output_-b/2a <R> connected_with <T> End <H> A=0 <R> else <T> Output_-b+c/2a <H> Output_-b+c/2a <R> connected_with <T> output_b-a/2a <H> output_b-a/2a <R> connected_with <T> End
<H> Start <R> connected_with <T> input_a,b,c <H> input_a,b,c <R> connected_with <T> A=b2-4ac <H> A=b2-4ac <R> connected_with <T> A<0 <H> A<0 <R> Y <T> No_solution <H> No_solution <R> connected_with <T> End <H> A<0 <R> N <T> A=0 <H> A=0 <R> Y <T> Output_-b/2a <H> Output_-b/2a <R> connected_with <T> End <H> A=0 <R> N <T> Output_-b+c/2a <H> Output_-b+c/2a <R> connected_with <T> output_b-a/2a <H> output_b-a/2a <R> connected_with <T> End
<H> Start <R> connected_with <T> Do_I_want_to_do_this? <H> Do_I_want_to_do_this? <R> No <T> Don't_do_it. <H> Do_I_want_to_do_this? <R> Yes <T> Will_it_likely_end_in_disaster? <H> Will_it_likely_end_in_disaster? <R> No <T> Do_it <H> Will_it_likely_end_in_disaster? <R> Yes <T> will_it_make_a_good_story_anyway? <H> will_it_make_a_good_story_anyway? <R> No <T> Don't_do_it. <H> will_it_make_a_good_story_anyway? <R> Yes <T> Do_it!
<H> Start <R> connected_with <T> Do_I_want_to_do_this <H> Do_I_want_to_do_this <R> Yes <T> Do_it! <H> Do_I_want_to_do_this <R> No <T> Will_it_likely_end_in_disaster? <H> Will_it_likely_end_in_disaster? <R> No <T> Do_it! <H> Will_it_likely_end_in_disaster? <R> Yes <T> will_it_make_a_good_story_anyway? <H> will_it_make_a_good_story_anyway? <R> No <T> Don't_do_it. <H> will_it_make_a_good_story_anyway? <R> Yes <T> Do_it!
<H> Start <R> connected_with <T> Read_X <H> Read_X <R> connected_with <T> X>0 <H> X>0 <R> False <T> Read_Y <H> X>0 <R> True <T> X=2*X <H> X=2*X <R> connected_with <T> Halt <H> Read_Y <R> connected_with <T> X=X*Y <H> X=X*Y <R> connected_with <T> Halt
<H> Start <R> connected_with <T> Input_a <H> Input_a <R> connected_with <T> Let_X=a/3 <H> Let_X=a/3 <R> connected_with <T> ls|a-x3|<S? <H> ls|a-x3|<S? <R> Yes <T> Output:The_cube_root_of_a_is_X. <H> Output:The_cube_root_of_a_is_X. <R> connected_with <T> Stop <H> ls|a-x3|<S? <R> No <T> Let_X=X-(X3-a)/3X2 <H> Let_X=X-(X3-a)/3X2 <R> connected_with <T> ls|a-x3|<S?  
<H> Work <R> connected_with <T> Tired? <H> Tired? <R> No <T> Work <H> Tired? <R> Yes <T> Go_to_coffee_maker <H> Go_to_coffee_maker <R> connected_with <T> Fresh_coffee? <H> Fresh_coffee? <R> Yes <T> Drink_coffee <H> Drink_coffee <R> connected_with <T> Tired? <H> Fresh_coffee? <R> No <T> Make_coffee <H> Make_coffee <R> connected_with <T> Drink_coffee
<H> Start <R> connected_with <T> Request_key_from_mem_cached <H> Request_key_from_mem_cached <R> connected_with <T> Does_key_exist? <H> Does_key_exist? <R> No <T> Load_data_from_database <H> Load_data_from_database <R> connected_with <T> Update_memcached <H> Does_key_exist? <R> Yes <T> Use_data <H> Update_memcached <R> connected_with <T> Use_data
<H> terminator <R> connected_with <T> SET_RESULT_TO_ZERO <H> SET_RESULT_TO_ZERO <R> connected_with <T> LSB(MPR)=1? <H> LSB(MPR)=1? <R> No <T> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <H> LSB(MPR)=1? <R> Yes <T> RESULT=RESULT+MPD <H> RESULT=RESULT+MPD <R> connected_with <T> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <H> LEFT_SHIFT_(1)_MPD_OR_RIGHT_SHIFT_(1)_RES <R> connected_with <T> NEXT_LSB_(MPR) <H> NEXT_LSB_(MPR) <R> connected_with <T> DONE_FOR_8_BITS? <H> DONE_FOR_8_BITS? <R> No <T> LSB(MPR)=1? <H> DONE_FOR_8_BITS? <R> Yes <T> terminator
<H> S <R> connected_with <T> Initialisation <H> Initialisation <R> connected_with <T> Population_of_solutions <H> Population_of_solutions <R> connected_with <T> Terminate? <H> Terminate? <R> Yes <T> Output_Best_Sol. <H> Output_Best_Sol. <R> connected_with <T> T <H> Terminate? <R> No <T> Selection <H> Selection <R> connected_with <T> Promising_Solutions <H> Promising_Solutions <R> connected_with <T> Reproduction <H> Reproduction <R> connected_with <T> New_Solutions <H> New_Solutions <R> connected_with <T> Replacement <H> Replacement <R> connected_with <T> Population_of_solutions  